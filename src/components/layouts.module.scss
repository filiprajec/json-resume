// define outlines for cells using inset shadows
$outline-width: 1px;
$all-outlines: $outline-width $outline-width 0 #000 inset,
  -1 * $outline-width -1 * $outline-width 0 #000 inset;

$no-left-outline: 0px $outline-width 0 #000 inset,
  -1 * $outline-width -1 * $outline-width 0 #000 inset;

$no-top-outline: $outline-width 0px 0 #000 inset,
  -1 * $outline-width -1 * $outline-width 0 #000 inset;

$no-top-or-left-outline: 0px 0px 0 #000 inset,
  -1 * $outline-width -1 * $outline-width 0 #000 inset;

$no-bottom-or-right-outline: -1 * $outline-width -1 * $outline-width 0 #000 inset,
  -1 * $outline-width -1 * $outline-width 0 #000 inset;

// a container which holds cells in either a horizontal or vertical direction
.container {
  display: flex;
  width: 100%;
}

// cell may hold content container(s) and cascade as many levels as desired
.cell {
  width: 100%;

  // alignment classes
  text-align: center;
  justify-content: center;
  align-items: center;

  // outline class
  &.outlined {
    box-shadow: $all-outlines; // creates outline on all four sides
  }
}

.grid {
  box-shadow: $all-outlines;
  padding-top: $outline-width;
  padding-left: $outline-width;

  // vertical direction or stacked in a column (row layout)
  .vertical {
    flex-direction: column;
    > .cell.outlined {
      box-shadow: $no-top-or-left-outline;
    }
  }

  // horizontal direction or stacked in a row (column layout)
  .horizontal {
    flex-direction: row;
    > .cell.outlined {
      box-shadow: $no-top-or-left-outline;
    }
  }
}
